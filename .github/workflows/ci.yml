name: Build and run tests

on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 10.16.3
        cache: 'npm'
    - run: npm i
    # - run: npm test

  deploy_staging:
    if: contains( github.ref, 'staging')
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    env:
        PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
        HOSTNAME : ${{ secrets.HOSTNAME }}
        USER_NAME : ${{ secrets.USER_NAME }}
        FIREBASE_ADMIN_SDK : ${{ secrets.FIREBASE_ADMIN_SDK }}
    steps:
      - name: set firebasesdk
        id: set
        run: |
          echo ::set-firebasesdk name=json_var::'$FIREBASE_ADMIN_SDK'
      - name: use firebasesdk
        run: |
          echo $json_var | jq '.[].name'
        env:
          json_var: ${{ steps.set.firebasesdk.json_var}}
      - run: echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
      - run: ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} uptime
      - run: |
          ssh -i private_key ${USER_NAME}@${HOSTNAME} '
          . ~/.nvm/nvm.sh &&
          cd ootopia-api &&
          git pull origin staging &&
          echo "$json_var" > ootopia-firebase-adminsdk.json &&
          npm ci &&
          npm run build &&
          pm2 delete ootopia-api-staging &&
          pm2 start dist/main.js --name "ootopia-api-staging"
          '